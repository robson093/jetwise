name: Build & Deploy

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: self-hosted

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
      
      - name: Set up .NET SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: "8.0.x"

      - name: Restore dependencies
        run: |
          for proj in \
            ./src/services/Jetwise.Services.Booking/Jetwise.Services.Booking/Jetwise.Services.Booking.csproj \
            ./src/services/Jetwise.Services.Gateway/Jetwise.Services.Gateway/Jetwise.Services.Gateway.csproj \
            ./src/clients/Jetwise.Clients.Web/Jetwise.Clients.Web/Jetwise.Clients.Web.csproj
          do
            dotnet restore "$proj"
          done

      - name: Build the solution
        run: |
          for proj in \
            ./src/services/Jetwise.Services.Booking/Jetwise.Services.Booking/Jetwise.Services.Booking.csproj \
            ./src/services/Jetwise.Services.Gateway/Jetwise.Services.Gateway/Jetwise.Services.Gateway.csproj \
            ./src/clients/Jetwise.Clients.Web/Jetwise.Clients.Web/Jetwise.Clients.Web.csproj
          do
            dotnet build "$proj" --configuration Release
          done

      - name: Log in to Docker Hub
        uses: docker/login-action@v3  
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker images for services
        run: |
          for service in booking gateway; do
            IMAGE_NAME=jetwise.services.$service
            IMAGE_TAG=${{ secrets.DOCKER_USERNAME }}/$IMAGE_NAME:${{ github.sha }}

            echo "Building $IMAGE_NAME"
            docker build -t $IMAGE_TAG ./src/services/Jetwise.Services.$(tr '[:lower:]' '[:upper:]' <<< ${service:0:1})${service:1}/Jetwise.Services.$(tr '[:lower:]' '[:upper:]' <<< ${service:0:1})${service:1}

            echo "Pushing $IMAGE_NAME"
            docker push $IMAGE_TAG

            echo "Updating manifest for $IMAGE_NAME"
            sed -i "s|image: .*/$IMAGE_NAME:.*|image: $IMAGE_TAG|" deploy/services.$service.yaml
          done 

      - name: Build and push Docker images for clients
        run: |
          for client in web; do
            IMAGE_NAME=jetwise.clients.$client
            IMAGE_TAG=${{ secrets.DOCKER_USERNAME }}/$IMAGE_NAME:${{ github.sha }}

            echo "Building $IMAGE_NAME"
            docker build -t $IMAGE_TAG ./src/clients/Jetwise.Clients.$(tr '[:lower:]' '[:upper:]' <<< ${client:0:1})${client:1}/Jetwise.Clients.$(tr '[:lower:]' '[:upper:]' <<< ${client:0:1})${client:1}

            echo "Pushing $IMAGE_NAME"
            docker push $IMAGE_TAG

            echo "Updating manifest for $IMAGE_NAME"
            sed -i "s|image: .*/$IMAGE_NAME:.*|image: $IMAGE_TAG|" deploy/clients.$client.yaml
          done

      - name: Apply Kubernetes manifests
        run: |
          for package in db.mongo.yaml services.booking.yaml services.gateway.yaml clients.web.yaml; do
            kubectl apply -f $package
          done 
        env:
          KUBECONFIG: /home/vboxuser/.kube/config